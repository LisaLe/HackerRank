/*
Given a time in AM/PM format, convert it to military (2424-hour) time.

Note: Midnight is 12:00:00AM12:00:00AM on a 1212-hour clock, and 00:00:0000:00:00 on a 2424-hour clock. Noon is 12:00:00PM12:00:00PM on a 1212-hour clock, and 12:00:0012:00:00 on a 2424-hour clock.

Input Format

A single string containing a time in 1212-hour clock format (i.e.: hh:mm:ssAMhh:mm:ssAM or hh:mm:ssPMhh:mm:ssPM), where 01≤hh≤1201≤hh≤12.

Output Format

Convert and print the given time in 2424-hour format, where 00≤hh≤2300≤hh≤23.

Sample Input
*/


process.stdin.resume();
process.stdin.setEncoding('ascii');

var input_stdin = "";
var input_stdin_array = "";
var input_currentline = 0;

process.stdin.on('data', function (data) {
    input_stdin += data;
});

process.stdin.on('end', function () {
    input_stdin_array = input_stdin.split("\n");
    main();
});

function readLine() {
    return input_stdin_array[input_currentline++];
}

/////////////// ignore above this line ////////////////////

function main() {
    var time = readLine();
    time = time.split(":");
    var regex = /PM/g;
    var regexAM = /AM/g;
    var convertedTime = "";

    if(time[2].match(regex) && time[0] == "12"){
       time[2] = time[2].replace(regex,"");
       time[0] = (parseInt(time[0])).toString();
    }else if(time[2].match(regex)){
       time[2] = time[2].replace(regex,"");
       time[0] = (parseInt(time[0]) + 12).toString();
    }
    else if(time[2].match(regexAM)){
       time[2] = time[2].replace(regexAM,"");
       if(parseInt(time[0])=="12"){
           time[0] = time[0].replace("12","00");
       }

    }

    for(var i = 0; i<3; i++){
        if(i!=2){
            convertedTime = convertedTime + time[i] + ":";
        }else{
            convertedTime = convertedTime + time[i];
        }

    }
     console.log(convertedTime);


}
